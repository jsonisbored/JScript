Program := stmts=Stmt* $

Stmt := CommentStmt
    | ExprStmt
    | LetStmt
    | AssignStmt

LetStmt := _'let '_
    mut='mut '?_
    ident=Ident
    _{':\s*' &'[a-zA-Z_]'}? type='[a-zA-Z_][a-zA-Z0-9_]*'?
    _'='_
    expr=Expr
    _';' pos=@ _
AssignStmt := _ ident=Ident _'='_ expr=Expr _';' pos=@ _
CommentStmt := _ literal='//.*' pos=@ _
ExprStmt := expr=Expr pos=@

Expr := SumExpr
    | ProdExpr
    | GroupExpr
    | NumExpr
    | StringExpr

SumExpr := left=Expr _ op='\+|-'_ right=Expr pos=@
    .type = string { return this.left.type; }
ProdExpr := left=Expr _ op='\*|/'_ right=Expr pos=@
    .type = string { return this.left.type; }
GroupExpr := _'\('_ expr=Expr _'\)'_ pos=@
    .type = string { return this.expr.type; }

NumExpr := _ literal='[0-9]+(\.[0-9]+)?' pos=@ _
    .value = number { return Number(this.literal); }
    .type = string { return 'num'; }
StringExpr := _ literal='".*"' _ pos=@
    .value = string { return this.literal.slice(1, -1); }
    .type = string { return 'str'; }

Ident := _ literal='[a-zA-Z_][a-zA-Z0-9_]*'_

_ := '\s*'
